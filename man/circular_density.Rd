% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{circular_density}
\alias{circular_density}
\title{Calculate densities of periodic values such as acrophases between user-defined start and end points, respecting the circular nature of the data.}
\usage{
circular_density(x, from = 0, to = 24, density_args = list())
}
\arguments{
\item{x}{Numeric vector with input value.}

\item{from, to}{The left and right-most points of the grid at which the density is to be estimated.
The defaults are 0 and 24, assuming a 24h clock cycle. The "to" argument is typically the period of the time series.}

\item{density_args}{arguments for \code{stats::density}}
}
\description{
Density calculation is prone to skewed density estimates at the start and end of the data range if the method is not aware of the circular nature of the data.
For that this function appends the data to itself at the front and rear end, and then uses \code{stats::density} with a default bandwidth of 0.5 to calculate densities
that can be used for histogram/ridge-like plots. The user should provide a start point `from` representing the smallest possible value of the periodoc values, and an end point
`to` which represents the period of the circular data / the time series.
}
\examples{

set.seed(1)
data <- abs(c(rnorm(1000, 12, 5), rnorm(500, 23))) \%\% 24

# linear density estimation incorrectly has low density at around x=0, as it does not know that at
# around x=24 density is high
library(ggplot2)
ggplot(data = data.frame(y = data), aes(x = y)) +
  geom_density()

# circular density estimation is aware that x=0 is almost identical to x=24
data_circ <- circular_density(data)
ggplot(data = data_circ, aes(x = time, y = density)) +
  geom_line()

}
