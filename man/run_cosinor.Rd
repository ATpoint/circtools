% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{run_cosinor}
\alias{run_cosinor}
\title{Detection of rhythmicity using limma with a cosinor model.}
\usage{
run_cosinor(x, time, period = 24, lmFit_args = list(), eBayes_args = list())
}
\arguments{
\item{x}{A numeric matrix or data.frame with observations in rows and samples in columns. Alternatively, an \code{EList} object.}

\item{time}{A numeric vector with the time information for each column of x.}

\item{period}{The numeric period of the rhythmicity, default 24.}

\item{lmFit_args}{A list with arguments for \code{limma::lmFit()}.}

\item{eBayes_args}{A list with arguments for \code{limma::eBayes()}.}
}
\description{
The function detects periodic rhythmicity based on the cosinor model as described in the limma design matrix guide:
\url{https://bioconductor.org/packages/release/workflows/vignettes/RNAseq123/inst/doc/designmatrices.html#cyclical-models}
For this it uses the limma framework to first fit per-observation cosinor models with \code{limma::lmFit()} and then
obtains moderated pvalues and FDRs with \code{limma::eBayes()}. It also returns estimates for mesor, amplitude and acrophase
based on the model coefficients. The function assumes that input data are "ready-to-use",  meaning that normalization, prefiltering (if applicable) appropriate 
for this type of data has been done.
}
\details{
Since the input data `x` (see argument description) can be both a numeric matrix or an `EList`, the user has a great flexibility over the analysis:
For an ordinary limma analysis (default settings) `x` could be a numeric matrix with data normalized and on log2 scale.
For a limma-trend analysis (\code{eBayes_args=list(trend=TRUE)}) `x` could be a numeric matrix of logCPMs from an RNA-seq experiment. 
For a limma-voom analysis `x` could be the output of \code{limma::voom()}.
Since limma automatically uses **weights** if provided in the EList as x$weights, one can put them there in case weighted regression is desired.
Weights could be estimated using \code{limma::arrayWeights} based on the cosinor model. A `model.matrix()` for the cosinor model can be obtained with \code{make_design()}.
Alternatively, `x` could be the output of \code{limma::voomWithQualityWeights()}.
}
\examples{
period <- 24
n_reps <- 1
time <- rep(seq(0, 24, by = 2), each = n_reps)
acrophases <- c(1, 10, 21)
y <- lapply(acrophases, function(ac) make_data(time = time, acrophase = ac, error_sd = .1)$value)

# x is a numeric matrix
x <- matrix(unlist(y), byrow = TRUE, ncol = length(time))
rownames(x) <- paste0("acrophase_", acrophases)
run_cosinor(x = x, time = time)

# x is an EList
xe <- new("EList", list(E = x))
run_cosinor(x = xe, time = time)

# x is an EList with weights
set.seed(1)
xew <- new("EList", list(E = x, weights = rnorm(ncol(x), 1)))
run_cosinor(x = xew, time = time)

}
